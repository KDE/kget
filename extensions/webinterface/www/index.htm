<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!--
Copyright 2008 Urs Wolfer <uwolfer @ kde.org>

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License as
published by the Free Software Foundation; either version 2 of 
the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<title>KGet Webinterface</title>
<script type="text/javascript" src="mootools.js"></script>
<script type="text/javascript">
//<![CDATA[
window.addEvent('domready', function() {
    var slide = new Fx.Slide('newDownloadFormContainer').hide(); // hide it at startup
    var slide = new Fx.Slide('settingsContainer').hide();
    function refreshList() {
        var request = new Request.JSON({url: 'data.json',
                secure: false,
                onComplete: function(jsonObj) {
                        listDownloads(jsonObj.downloads);
                }
        }).send();
    }
    refreshList(); // load it at start

    function doAction(action, data) {
        var log = $('log_res').empty().addClass('ajax-loading');
        var addRequest = new Request.HTML({url: 'do',
                update: log,
                onComplete: function() {
                log.removeClass('ajax-loading');
                refreshList();
            }}).get({'action': action, 'data': data})
    }

    var listDownloads = function(downloads) {
        var downloadsList = $('downloadsList').empty();
        var table = new Element('table', {'id': 'downloadList'});
        downloads.each(function(download) {
                var toolTipText = download.name + ' :: Source: ' + download.src + '<br />Saving to: ' + download.dest;
                var tr = new Element('tr', {'class': 'toolTip', 'title': toolTipText}).injectInside(table);
                var actions = new Element('td').injectInside(tr);
                var start = new Element('a', {'href': '#'}).setHTML('start').injectInside(actions);
                start.addEvent('click', function(e) {
                    e = new Event(e).stop();
                    doAction('start', download.src);
                });
                var separator = new Element('span').setHTML('&nbsp;|&nbsp;').injectAfter(start);
                var stop = new Element('a', {'href': '#'}).setHTML('stop').injectAfter(separator);
                stop.addEvent('click', function(e) {
                    e = new Event(e).stop();
                    doAction('stop', download.src);
                });
                separator = new Element('span').setHTML('&nbsp;|&nbsp;').injectAfter(stop);
                var remove = new Element('a', {'href': '#'}).setHTML('remove').injectAfter(separator);
                remove.addEvent('click', function(e) {
                    e = new Event(e).stop();
                    doAction('remove', download.src);
                });
                var name = new Element('td').setHTML(download.name).injectAfter(actions);
                var status = new Element('td', {'class': 'center'}).setHTML(download.status).injectAfter(name);
                var size = new Element('td', {'class': 'center'}).setHTML(download.size).injectAfter(status);
                var progress = new Element('td', {'class': 'center'}).setHTML(download.progress).injectAfter(size);
                var speed = new Element('td', {'class': 'center'}).setHTML(download.speed).injectAfter(progress);
        });
        table.inject(downloadsList);

        var toolTips = new Tips($$('.toolTip'), {
            maxTitleChars: 80
        });
    }

    $('loadDownloads').addEvent('click', function(e) {
        e = new Event(e).stop();
        refreshList();
    });

    $('newDownloadForm').addEvent('submit', function(e) {
        new Event(e).stop();
        doAction('add', $('url').value);
        $('url').value = '';
        var slide = new Fx.Slide('newDownloadFormContainer').toggle();
    });

    $('newDownload').addEvent('click', function(e) {
        e = new Event(e).stop();
        var slide = new Fx.Slide('newDownloadFormContainer').toggle();
    });

    $('settingsForm').addEvent('submit', function(e) {
        new Event(e).stop();
        $clear(updateTimer);
        var interval = parseInt($('interval').value);
        if ($('enableUpdates').checked && interval >= 1)
            updateTimer = refreshList.periodical(interval * 1000);
        var slide = new Fx.Slide('settingsContainer').toggle();
    });

    $('settings').addEvent('click', function(e) {
        e = new Event(e).stop();
        var slide = new Fx.Slide('settingsContainer').toggle();
    });
    var updateTimer = refreshList.periodical(10000);
});
//]]>
</script>
<style type="text/css">
body {
    font-family: sans-serif;
}
a, a:active, a:hover, a:visited {
    color: #323232;
    text-decoration: none;
}
h1, h2, h3 {
    border-bottom: 1px solid #DDDDDD;
}
#newDownloadFormContainer, #settingsContainer {
    padding: 10px;
}
#downloadList {
    width: 100%;
    font-size: 0.8em;
    background-color: #F9F9F9;
    border: 1px solid #DDDDDD;
}
#downloadList tr:hover {
    background-color: #DDDDDD;
}
#downloadList .center {
    text-align: center;
    white-space: nowrap;
}
#interval {
    width: 40px;
}
.tool-tip {
    color: #000000;
    z-index: 13000;
    border: 1px solid #B8B8B8;
}
.tool-title {
    font-weight: bold;
    font-size: 0.8em;
    margin: 0;
    color: #323232;
    padding: 8px 8px 4px;
    background: #DDDDDD;
    border-bottom: 1px solid #B8B8B8;
}
.tool-text {
    font-size: 0.8em;
    padding: 4px 8px 8px;
    background: #F9F9F9;
}
</style>
</head>
<body>
<h2>KGet Webinterface</h2>
<p>
<a href="#" title="Refresh List" id="loadDownloads">Refresh List</a> | 
<a href="#" title="New Download" id="newDownload">New Download</a> | 
<a href="#" title="Settings" id="settings">Settings</a>
</p>

<div id="newDownloadFormContainer">
    <form id="newDownloadForm" action="do" method="post">
        <div id="newDownloadFormBox">
            <div>
                <p>URL:</p>
                <input type="text" name="url" id="url" value="" />
            </div>
            <!--div>
                <p>Group:</p>
                <select name="new">
                    <option value="yes" selected="selected">yes</option>
                    <option value="no">no</option>
                </select>
            </div-->
            <input type="submit" value="OK" />
        </div>
    </form>
    <div id="log">
        <div id="log_res"></div>
    </div>
</div>

<div id="settingsContainer">
    <form id="settingsForm" action="#" method="post">
        <div id="settingsFormBox">
            <div>
                <p>Interval updates:</p>
                <input type="text" name="interval" id="interval" value="10" /> sec
                <input type="checkbox" name="enableUpdates" id="enableUpdates" checked="checked" />
                <label for="enableUpdates">Enable interval updates</label>
            </div>

            <input type="submit" value="OK" />
        </div>
    </form>
</div>

<h3>Downloads</h3>
<div id="downloadsList"></div>

</body>
</html>
