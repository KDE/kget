TODO-list for KGet
======================

<nick>  == reported by
Legend:
    ADD - ADDed
    CHG - CHanGed
    FIX - FIXed


    IN PROGRESS
---------------------
FIX <dario> handle SideBar resizing correctly




        TODO
---------------------

SHORT-TERM (URGENT):

  FIX <pino> _rewrite_ & simplify the scheduler functions which schedule
      new downloads, atm they are too messy
  FIX <pino> _rewrite_ & simplify the scheduler functions which manage the
      downloads, atm they are too messy and don't work properly
  FIX <dario> when resizing the columns of the mainview and the groupspanel
      the items are not updated correctly
  ADD <dario> implement the GlobalStatus object and make the 
      systray to update using the ViewInterface slots instead of the actual hack.
  ADD <dario> implement progressive filling of the icon in the system tray
  ADD <dario> make it possible to move transfers to a specific group using 
      the popup menu.
  ADD <dario> make it possible to drag a transfer in a group inside the
      mainview or in the groups visible in the groupspanel.
  CHG <dario> verify that the painting operations in the views are performed
      only when necessary.
  CHG <dario> optimize if possible the fact we must check if a transfer
      is still present in the transfers list (in the Scheduler class, function
      slotTransferChanged() ).
  CHG <pino> verify that all the settings are respected
  ADD <pino> implement the grouping functionalities

MID-TERM:

  ADD <dario> change the actual way we use the priority for each transfer.
      In the future it will describe the precise order the transfers will be 
      downloaded.
  ADD <dario> use KPassivePopups to notify when all the transfers have been
      downloaded.
  CHG <dario> profile kget and look for possible optimizations.
  CHG <dario> finish to implement transferKio adding, for example, setDelay.
  ADD <dario> add the possibility to select "open destination folder" in 
      the transfer's popup menu.
  ADD <kget> bitTorrent support
  CHG <kget> setup a decent gui with a decent toolbars.
  CHG <kget> sync the configuration options with what has currently been 
      implemented.
  ADD <dario> make it possible to associate a default folder to each group.
  ADD <pino> tooltips and what's this for settings
  ADD <pino> implement the notifications

LONG-TERM:

  ADD <kget> make the TestView able to make intensive tests on kget by
      giving commands to the Scheduler and looking if what happens is what should
      happen.
  CHG <dario> usability enhancements as in #79519
  ADD <dario> sidebar for transfer statistics and more (bandwidth
      graph, alternative urls, connection status/type, virtual folders,
      ...)
  ADD <kget> add bandwidth limiting
  ADD <kget> splits download in N segments
  ADD <kget> support for mirrors
  ADD <dario> 'low priority downloads' as in br #50776.
  ADD <kget> add Help & Guide


        DONE
---------------------


  Things done until 21/01/2005

  CHG <dario, eros> decoupling between gui and transfer operations.
  ADD <dario> Implement the MainView class that should become the kget main view.
  CHG <dario> Transfer object rewrite to make it easily inherited from 
      new kind of transfers.
  ADD <dario> TransferKio. The first transfer realized using kioSlaves
  CHG <dario> Scheduler logic enhancement (there are still lots of things to do)
  ADD <dario> groups support and notifies to the views.
  ADD <dario> systray icon with blinking overlay.
  CHG <eros> Move all the configuration framework to KConfigXT
  CHG <dario> implement delayedInitialization of the kget app. This should speed up
      the startup a lot with big lists of transfers.
  FIX <dario> the konqueror plugin doesn't allow the download of links if 
      the relative web page has been closed
  FIX <pino> make more fluid the drop target movement



IDEAS:
   * Use the single transfer dialog to display transfer property, progress and
     to set up advanced options of a transfer, like its splitting into chuncks.


DISCUSSING:
   * Remember to move downloaded Transfers in a black-list that will be
     deleted when program exits. So old pointers to downloaded items are
     still valid when the transfer ends.

