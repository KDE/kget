/*
 * This file was generated by dbusxml2cpp version 0.6
 * Command line was: dbusxml2cpp -p kgetdbus org.kde.kget.xml
 *
 * dbusxml2cpp is Copyright (C) 2006 Trolltech ASA. All rights reserved.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef KGETDBUS_H_1186771031
#define KGETDBUS_H_1186771031

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.kde.kget
 */
class OrgKdeKgetInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.kde.kget"; }

public:
    OrgKdeKgetInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~OrgKdeKgetInterface();

public Q_SLOTS: // METHODS
    inline QDBusReply<void> addTransfers(const QString &in0, const QString &in1)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0) << qVariantFromValue(in1);
        return callWithArgumentList(QDBus::Block, QLatin1String("addTransfers"), argumentList);
    }

    inline QDBusReply<bool> dropTargetVisible()
    {
        QList<QVariant> argumentList;
        return callWithArgumentList(QDBus::Block, QLatin1String("dropTargetVisible"), argumentList);
    }

    inline QDBusReply<bool> offlineMode()
    {
        QList<QVariant> argumentList;
        return callWithArgumentList(QDBus::Block, QLatin1String("offlineMode"), argumentList);
    }

    inline QDBusReply<void> setDropTargetVisible(bool in0)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0);
        return callWithArgumentList(QDBus::Block, QLatin1String("setDropTargetVisible"), argumentList);
    }

    inline QDBusReply<void> setOfflineMode(bool in0)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0);
        return callWithArgumentList(QDBus::Block, QLatin1String("setOfflineMode"), argumentList);
    }

    inline QDBusReply<QVariantMap> transfers()
    {
        QList<QVariant> argumentList;
        return callWithArgumentList(QDBus::Block, QLatin1String("transfers"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void transfersChanged(const QVariantMap &out);
};

namespace org {
  namespace kde {
    typedef ::OrgKdeKgetInterface kget;
  }
}
#endif
