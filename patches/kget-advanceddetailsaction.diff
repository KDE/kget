Index: bttransferfactory.cpp
===================================================================
--- bttransferfactory.cpp	(revision 752188)
+++ bttransferfactory.cpp	(working copy)
@@ -14,7 +14,6 @@
 #include "bttransfer.h"
 #include "bttransferhandler.h"
 #include "btdetailswidget.h"
-#include "btadvanceddetailswidget.h"
 
 #include <kdebug.h>
 
@@ -60,20 +59,29 @@
 {
     BTTransferHandler * bttransfer = static_cast<BTTransferHandler *>(transfer);
 
-    if (bttransfer->ready())
-    {
-        BTAdvancedDetailsWidget * details = new BTAdvancedDetailsWidget(bttransfer);
-        details->show();
-    }
-
     return new BTDetailsWidget(bttransfer);
 }
 
-const QList<KAction *> BTTransferFactory::actions()
+const QList<KAction *> BTTransferFactory::actions(TransferHandler *handler)
 {
-    /**if (!handler)
+    BTTransferHandler * bttransfer = static_cast<BTTransferHandler *>(handler);
+
+    KAction *openAdvancedDetailsAction = new KAction(KIcon("document-open"), i18n("&Advanced Details"), this);
+
+    connect(openAdvancedDetailsAction, SIGNAL(triggered()), bttransfer, SLOT(createAdvancedDetails()));
+
+    /**if (bttransfer->ready())
+    {
+        kDebug(5001);
+        bttransfer->createAdvancedDetails();
+    }**/
+
+    QList<KAction*> actions;
+    actions.append(openAdvancedDetailsAction);
+
+    if (bttransfer)
+        return actions;
+    else
         return QList<KAction *>();
-    else**/
-        return QList<KAction *>();
 }
 
Index: btadvanceddetailswidget.h
===================================================================
--- btadvanceddetailswidget.h	(revision 752188)
+++ btadvanceddetailswidget.h	(working copy)
@@ -37,7 +37,10 @@
         void transferChangedEvent(TransferHandler * transfer);
         void init();
 
-     private slots:
+    signals:
+        void aboutToClose();
+
+    private slots:
         //TrackerView
         void updateTracker();
         void updateTrackerGUI();
Index: bttransfer.cpp
===================================================================
--- bttransfer.cpp	(revision 752188)
+++ bttransfer.cpp	(working copy)
@@ -10,7 +10,9 @@
 */
 
 #include "bttransfer.h"
+#include "bttransferhandler.h"
 #include "bittorrentsettings.h"
+#include "btadvanceddetailswidget.h"
 
 #include "core/kget.h"
 
@@ -48,6 +50,7 @@
     m_ready(false)
 {
     kDebug(5001);
+    advancedDetails = 0;
     if (m_source.url().isEmpty())
         return;
 
@@ -265,6 +268,29 @@
     torrent->getTrackersList()->addTracker(url,true);
 }
 
+void BTTransfer::createAdvancedDetails()
+{
+    kDebug(5001);
+
+    if (!advancedDetails)
+    {
+        kDebug(5001) << "Going to create AdvancedDetails";
+        BTTransferHandler *transferhandler = static_cast<BTTransferHandler*>(handler());
+        if (transferhandler)
+        {
+            advancedDetails = new BTAdvancedDetailsWidget(transferhandler);
+            advancedDetails->show();
+            connect(advancedDetails, SIGNAL(aboutToClose()), SLOT(removeAdvancedDetails()));
+        }
+    }
+}
+
+void BTTransfer::removeAdvancedDetails()
+{
+    advancedDetails->close();
+    advancedDetails = 0;
+}
+
 /**Property-Functions**/
 KUrl::List BTTransfer::trackersList() const
 {
Index: btadvanceddetailswidget.cpp
===================================================================
--- btadvanceddetailswidget.cpp	(revision 752188)
+++ btadvanceddetailswidget.cpp	(working copy)
@@ -31,7 +31,8 @@
     /**A lot of code is from KTorrent's infowidget by Joris Guisson, thx for the nice work**/
     setupUi(this);
 
-    tc = m_transfer->torrentControl();
+    if (transfer)
+        tc = m_transfer->torrentControl();
 
     tc->setMonitor(this);
 
@@ -339,6 +340,7 @@
     BittorrentSettings::self()->writeConfig();
 
     tc->setMonitor(0);
+    emit aboutToClose();
     deleteLater();
 }
 
Index: bttransferfactory.h
===================================================================
--- bttransferfactory.h	(revision 752188)
+++ bttransferfactory.h	(working copy)
@@ -21,13 +21,13 @@
         BTTransferFactory();
         ~BTTransferFactory();
 
-        Transfer * createTransfer(const KUrl &srcUrl, const KUrl &destUrl, TransferGroup * parent, Scheduler * scheduler, const QDomElement * e = 0 );
+        Transfer * createTransfer(const KUrl &srcUrl, const KUrl &destUrl, TransferGroup * parent, Scheduler * scheduler, const QDomElement * e = 0);
 
         TransferHandler * createTransferHandler(Transfer * transfer, Scheduler * scheduler);
 
-        QWidget * createDetailsWidget( TransferHandler * transfer );
+        QWidget * createDetailsWidget(TransferHandler * transfer);
 
-        const QList<KAction *> actions();
+        const QList<KAction *> actions(TransferHandler * handler);
 
         QWidget * createSettingsWidget(KDialog * parent) { return new BTSettingsWidget(parent);}
 
Index: bttransferhandler.h
===================================================================
--- bttransferhandler.h	(revision 752188)
+++ bttransferhandler.h	(working copy)
@@ -17,8 +17,9 @@
 
 class Scheduler;
 
-class BTTransferHandler : public TransferHandler
+class BTTransferHandler : public QObject, public TransferHandler
 {
+    Q_OBJECT
     public:
         BTTransferHandler(BTTransfer * transfer, Scheduler * scheduler);
 
@@ -41,6 +42,9 @@
         void addTracker(QString url)                    {m_transfer->addTracker(url);}
         void setTrafficLimits(int ulLimit, int dlLimit) {m_transfer->setTrafficLimits(ulLimit, dlLimit);}
 
+    public slots:
+        void createAdvancedDetails()                    {m_transfer->createAdvancedDetails();}
+
     private:
         BTTransfer * m_transfer;
 };
Index: bttransfer.h
===================================================================
--- bttransfer.h	(revision 752188)
+++ bttransfer.h	(working copy)
@@ -11,11 +11,13 @@
 #ifndef BTTRANSFER_H
 #define BTTRANSFER_H
 
-#include <QTimer>
-
 #include "core/transfer.h"
 #include "torrent/torrentcontrol.h"
 
+#include <QTimer>
+
+class BTAdvancedDetailsWidget;
+
 class BTTransfer : public QObject, public Transfer
 {
     Q_OBJECT
@@ -80,6 +82,7 @@
         void setTrafficLimits(int ulLimit, int dlLimit);
         void addTracker(QString url);
         //void save(const QDomElement &element);
+        void createAdvancedDetails();
 
         bool ready();
 
@@ -91,10 +94,13 @@
         void update();
         void slotStoppedByError(bt::TorrentInterface* error, QString errormsg);
         void slotDownloadFinished(bt::TorrentInterface* ti);
+        void removeAdvancedDetails();
 
     private:
         bt::TorrentControl *torrent;
 
+        BTAdvancedDetailsWidget *advancedDetails;
+
         QString m_tmp;
         int m_dlLimit;
         int m_ulLimit;
